# Правила разработки

## CSS Импорты

**pattern**: `@import.*\.css`
**description**: При импорте CSS файлов в Tailwind CSS всегда используй относительный путь с `./` для файлов в той же директории
**examples**: 
  - ❌ Неправильно: `@import "cta.css" layer(components);`
  - ✅ Правильно: `@import "./cta.css" layer(components);`
**exceptions**: Импорты из node_modules могут использоваться без `./`

## Footer Case & Review AJAX Архитектура

**pattern**: `footer-(case|review).*`
**description**: Footer case и review используют одинаковую архитектуру динамической загрузки через AJAX с fade анимацией
**structure**:
  - Контейнер `.footer-case-container` / `.footer-review-container` с overflow-hidden
  - Кнопка `.footer-case__refresh` / `.footer-review__refresh` с атрибутом `data-refresh-url`
  - Элементы `.footer-case` / `.footer-review` абсолютно позиционированы с `transition-all`
  - Состояния управляются через `data-active` атрибут с классами `data-[active=true]:opacity-100 data-[active=true]:pointer-events-auto`
  - Загрузка: disabled кнопка + animate-spin иконка, timeout 10 секунд
**ajax**:
  - Сервер возвращает готовый HTML элемента без позиционирования
  - JavaScript автоматически устанавливает `data-active="false"`
  - Последовательность: `data-active="false"` старые → `data-active="true"` новый → удалить старые
**examples**:
  - ✅ Правильно: Управление состояниями через `data-active` атрибут
  - ✅ Правильно: Кейс и отзыв как кликабельные ссылки с hover эффектами
  - ✅ Правильно: Кнопка обновления в углу контейнера
  - ❌ Неправильно: Прямое управление классами opacity/pointer-events
**exceptions**: При ошибке AJAX console.error, кнопка разблокируется

## Адаптивные контейнеры с переключением

**pattern**: `(contact|switcher).*container`
**description**: Для контейнеров с переключаемым содержимым используй разные стратегии позиционирования в зависимости от разрешения экрана
**structure**:
  - Мобильные разрешения (до lg): используй `display: none/block` для автоматической подстройки высоты контейнера
  - Десктопные разрешения (lg+): используй `absolute` позиционирование с `opacity`/`pointer-events` для фиксированной высоты
  - Классы переключения: `max-lg:hidden max-lg:data-[active=true]:block lg:absolute lg:inset-0`
  - Убирай фиксированную высоту контейнера для мобильных разрешений
**examples**:
  - ✅ Правильно: `max-lg:hidden max-lg:data-[active=true]:block lg:transition-opacity lg:opacity-0`
  - ✅ Правильно: Убрать `h-[954px] md:h-[853px]` из контейнера, оставить только `lg:h-[676px]`
  - ❌ Неправильно: Использовать одинаковое позиционирование для всех разрешений
**exceptions**: Когда дизайн требует фиксированной высоты на всех разрешениях 